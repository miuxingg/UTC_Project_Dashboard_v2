import FullLayout from '../src/layouts/FullLayout';
import Head from 'next/head';
import '../styles/style.scss';
import { ThemeProvider } from '@mui/material';
import { theme } from '../src/libs/theme';
import { useEffect } from 'react';
import { wrapper } from '../src/redux';
import Snackbar from '../src/components/elements/Snackbar';
import { useDispatch, useSelector } from 'react-redux';
import { notificationSelector } from '../src/redux/app/selectors';
import { clearMessage } from '../src/redux/app';
import { AuthContainer } from '../src/containers/AuthContainer';

function BookStoreAdmin({ Component, pageProps }) {
  const dispatch = useDispatch();
  const notification = useSelector(notificationSelector);

  useEffect(() => {
    const jssStyles = document.querySelector('#jss-server-side');
    if (jssStyles) {
      jssStyles.parentElement?.removeChild(jssStyles);
    }
  }, []);
  return (
    <>
      <Head>
        <title>BookStore - Dashboard</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <ThemeProvider theme={theme}>
        <FullLayout>
          <AuthContainer>
            <Component {...pageProps} />
            <Snackbar
              open={notification.open}
              message={notification.message}
              onClose={() => dispatch(clearMessage())}
              type={notification.type}
            />
          </AuthContainer>
        </FullLayout>
      </ThemeProvider>
    </>
  );
}

export default wrapper.withRedux(BookStoreAdmin);
